<#@ template debug="false" hostspecific="True" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Web" #>
<#@ assembly name="System.Web.Extensions" #>
<#@ import namespace="System.Web.Script.Serialization" #>
<#@ assembly name="EnvDTE" #>
<#@ import namespace="EnvDTE" #>
<#
    
    var serviceProvider = this.Host as IServiceProvider;
    var dte = serviceProvider.GetService(typeof(EnvDTE.DTE)) as EnvDTE.DTE;
	var solutionDirectory = System.IO.Path.GetDirectoryName(dte.Solution.FullName);
	var projectNameSP = "";
	var dllPath = "";
	var projectNameBll = "";
	var jsonPath = "";
	foreach (Project p in dte.Solution.Projects)
	{
		if(p.Name.Contains("BLL"))
		{	
			projectNameBll = p.Name;
			solutionDirectory = System.IO.Path.GetDirectoryName(p.FullName);
			dllPath = solutionDirectory + @"\bin\Debug\";
		}
		else if(p.Name.Contains("SP"))
		{	
			solutionDirectory = System.IO.Path.GetDirectoryName(p.FullName);
			solutionDirectory = System.IO.Path.GetDirectoryName(p.FullName);
			jsonPath = solutionDirectory + @"\Core\Template\00-ConfiguracaoTT.json";
		}
	}

	String json = System.IO.File.ReadAllText(jsonPath);
	JavaScriptSerializer serializer = new JavaScriptSerializer() { MaxJsonLength = Int32.MaxValue };
	object jsonObj = serializer.Deserialize<object>(json);
	String urlSite = ((Dictionary<String, object>)jsonObj)["UrlSite"].ToString();

#>
\<#<#= "@ template debug=\"false\" hostspecific=\"True\" language=\"C#\" " #>\#>
\<#<#= "@ assembly name=\"System.Core\" " #>\#>
\<#<#= "@ import namespace=\"System.Linq\" " #>\#>
\<#<#= "@ import namespace=\"System.Text\" " #>\#>
\<#<#= "@ import namespace=\"System.Collections.Generic\" " #>\#>
\<#<#= "@ import namespace=\"System.IO\" " #>\#>
\<#<#= "@ import namespace=\"System.Reflection\" " #>\#>
\<#<#= "@ assembly name=\"EnvDTE\" " #>\#>
\<#<#= "@ import namespace=\"EnvDTE\" " #>\#>
<#
	if(dllPath != "")
    {
        foreach (string dll in Directory.GetFiles(dllPath, "*.dll"))
        {
            if(dll != "")
                #>\<#<#= "@ assembly name=\""+ dll +"\" "#>\#><#=""#><#
        }
#>\<#<#= "@ import namespace=\""+ projectNameBll +".Modelo\" "#>\#><#=""#><#
    }
#>
\<#<#= "@ import namespace=\"Iteris\" " #>\#>
\<#<#= "@ import namespace=\"PortalDeFluxos.Core.BLL\" " #>\#>
\<#<#= "@ import namespace=\"PortalDeFluxos.Core.BLL.Modelo\" " #>\#>
\<#<#= "@ import namespace=\"PortalDeFluxos.Core.BLL.Modelo.T4\" " #>\#>
\<#<#= "@ import namespace=\"PortalDeFluxos.Core.BLL.Utilitario\" " #>\#>
\<#<#= "@ import namespace=\"PortalDeFluxos.Core.BLL.Negocio\" " #>\#>
\<#<#= "@ output extension=\"Final.txt\" " #>\#>
\<#<#= "ConfiguraoTT configuracao = NegocioGeradorTT.ObterConfiguracaoTT(@\"" + jsonPath + "\");"  #>\#>
<#= @"
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

SET ANSI_PADDING ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].["#>\<#=<#="NegocioGeradorTT.GenerateTableName(configuracao.NomeLista)" #>\#><#=@"]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].["#>\<#=<#="NegocioGeradorTT.GenerateTableName(configuracao.NomeLista)" #>\#><#=@"](
	[CodigoItem] [int] NOT NULL,
	[CodigoLista] [uniqueidentifier] NOT NULL,
	[LoginInclusao] [varchar](255) NOT NULL,
	[DataInclusao] [datetime] NOT NULL,
	[LoginAlteracao] [varchar](255) NULL,
	[DataAlteracao] [datetime] NULL,
	[LoginInclusaoSP] [varchar](255) NULL,
	[DataInclusaoSP] [datetime] NULL,
	[LoginAlteracaoSP] [varchar](255) NULL,
	[DataAlteracaoSP] [datetime] NULL,
	[Ativo] [bit] NOT NULL,
"#>\<#=<#="NegocioGeradorTT.ObterColunasBD(@\"" + urlSite + "\",configuracao.NomeLista)" #>\#><#=@"
CONSTRAINT [PK_"#>\<#=<#="NegocioGeradorTT.GenerateTableName(configuracao.NomeLista)" #>\#><#=@"] PRIMARY KEY CLUSTERED 
(
	[CodigoItem] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 80) ON [PRIMARY]
) ON [PRIMARY]
END
GO

SET ANSI_PADDING OFF
GO

IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'"#>\<#=<#="NegocioGeradorTT.GenerateTableName(configuracao.NomeLista)" #>\#><#=@"', N'COLUMN',N'CodigoItem'))
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ID do item no Sharepoint' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'"#>\<#=<#="NegocioGeradorTT.GenerateTableName(configuracao.NomeLista)" #>\#><#=@"', @level2type=N'COLUMN',@level2name=N'CodigoItem'
GO

IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'"#>\<#=<#="NegocioGeradorTT.GenerateTableName(configuracao.NomeLista)" #>\#><#=@"', N'COLUMN',N'CodigoLista'))
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ID da lista no Shaepoint' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'"#>\<#=<#="NegocioGeradorTT.GenerateTableName(configuracao.NomeLista)" #>\#><#=@"', @level2type=N'COLUMN',@level2name=N'CodigoLista'
GO
"#>
<#@ output extension="Temp.tt" #>
